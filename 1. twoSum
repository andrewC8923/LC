class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, List<Integer>> m = new HashMap<>();
        int[] rtn = new int [2];
        List<Integer> lst; 
        
        for(int i =0; i < nums.length; i++) {
            if (m.containsKey(nums[i])) {
                lst =m.get(nums[i]);
                lst.add(i);
                m.put(nums[i], lst);
            } else {
                lst = new LinkedList<>();
                lst.add(i);
                m.put(nums[i], lst);
            }             
        }
     
        for(Integer i : m.keySet() ) {
            if (m.containsKey (target - i)) {
                if (target - i == i) {
                     rtn [0] = m.get(i).get(0);
                     rtn [1] = m.get(i).get(1);
                } else  {
                rtn [0] = m.get(i).get(0);
                rtn [1] = m.get(target -i).get(0);
                }
                break;  
            } 
        }
        
        return rtn;
    }
}
